NDSummary.OnToolTipsLoaded("PMAClangClass:Math",{296:"<div class=\"NDToolTip TClass LPMAClang\"><div class=\"TTSummary\">Contains subroutines to assist in certain mathematical calculations</div></div>",298:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype298\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.CalculateMidpoint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PName last\">point1,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">point2,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">center</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Find the center between two points.</div></div>",299:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype299\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.TransformPoint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PName last\">p0x,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">p0y,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">angleInDegrees,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">px,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">py</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Rotate a point a given number of degrees and return the new position</div></div>",300:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype300\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.ClearBit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PName last\">registerIn,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">bitIndex,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">registerOut</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Zero out a given index in a register</div></div>",301:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype301\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.SetBit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PName last\">registerIn,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">bitIndex,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">registerOut</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Set a given index in a register</div></div>",302:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype302\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.GetBit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PName last\">registerIn,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">bitIndex,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">bitValue</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Query if a given bit in a register is high or low</div></div>",303:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype303\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.VectorToUnitVector(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PName last\">ni,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">nj,</td></tr><tr><td class=\"first\"></td><td class=\"PName last\">nk,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">nui,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">nuj,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">nuk,</td></tr><tr><td class=\"PNamePrefix first\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Convert a vector to a unit vector</div></div>",304:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype304\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.TriggerBitHighLow(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">registerIn,</td></tr><tr><td class=\"PName first last\">bitIndex,</td></tr><tr><td class=\"PName first last\">bitHighTime</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Set the given index in a register to 1 for a specified amount of time, and then to 0.&nbsp; If the bit is already high, it will still be set low after the time elapses.</div></div>",305:"<div class=\"NDToolTip Tsubsub LPMAClang\"><div id=\"NDPrototype305\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">call Math.TriggerBitLowHigh(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">registerIn,</td></tr><tr><td class=\"PName first last\">bitIndex,</td></tr><tr><td class=\"PName first last\">bitHighTime</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Set the given index in a register to 0 for a specified amount of time, and then to 1.&nbsp; If the bit is already low, it will still be set high after the time elapses.</div></div>"});